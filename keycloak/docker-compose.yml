services:
  outline:
    image: docker.getoutline.com/outlinewiki/outline:latest
    container_name: outline_server
    environment:
      NODE_ENV: production
      UTILS_SECRET: ${OUTLINE_UTILS_SECRET}
      SECRET_KEY: ${OUTLINE_SECRET_KEY}
      DATABASE_URL: postgres://${POSTGRESQL_USERNAME}:${POSTGRESQL_PASSWORD}@postgres:5432/outline
      DATABASE_CONNECTION_POOL_MIN:
      DATABASE_CONNECTION_POOL_MAX:
      PGSSLMODE: disable
      REDIS_URL: redis://redis:6379
      URL: https://${URL_OUTLINE}
      PORT: 3000
      # Keycloak OAuth
      OIDC_CLIENT_ID: outline
      OIDC_CLIENT_SECRET: PkIjqEKDZIJNtBFfln21SH9cHKyTYl80
      OIDC_AUTH_URI: http://${URL_KEYCLOAK}:15280/realms/outline/protocol/openid-connect/auth
      OIDC_TOKEN_URI: http://${URL_KEYCLOAK}:15280/realms/outline/protocol/openid-connect/token
      OIDC_USERINFO_URI: http://${URL_KEYCLOAK}:15280/realms/outline/protocol/openid-connect/userinfo
      OIDC_LOGOUT_URL: http://${URL_KEYCLOAK}:15280/realms/outline/protocol/openid-connect/logout
      OIDC_REDIRECT_URI: https://${URL_OUTLINE}/auth/oidc.callback
      FORCE_HTTPS: false
      WEB_CONCURRENCY: 1
      DEBUG: http
      LOG_LEVEL: info
      DEFAULT_LANGUAGE: en_US
      RATE_LIMITER_ENABLED: true
      RATE_LIMITER_REQUESTS: 1000
      RATE_LIMITER_DURATION_WINDOW: 60
      DEVELOPMENT_UNSAFE_INLINE_CSP: false
      # File Storage
      FILE_STORAGE: local
      FILE_STORAGE_UPLOAD_MAX_SIZE: 52428800 #50MB
      FILE_STORAGE_IMPORT_MAX_SIZE: 5120000
    ports:
      - "15240:3000"
    depends_on:
      - postgres
      - redis
      - keycloak
    restart: always
    networks:
      - keycloak-network

  redis:
    image: redis
    container_name: outline_redis
    ports:
      - "6379:6379"
    volumes:
      - ./redis.conf:/redis.conf
    command: ["redis-server", "/redis.conf"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 30s
      retries: 3
    restart: always
    networks:
      - keycloak-network

  postgres:
    image: postgres
    container_name: outline_postgres
    ports:
      - "5432:5432"
    volumes:
      - database-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "outline", "-U", "user"]
      interval: 30s
      timeout: 20s
      retries: 3
    environment:
      POSTGRES_USER: ${POSTGRESQL_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRESQL_PASSWORD}
      POSTGRES_DB: 'outline'
    restart: always
    networks:
      - keycloak-network

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak_server
    environment:
      PROXY_ADDRESS_FORWARDING: true
      POSTGRES_USER: ${POSTGRESQL_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRESQL_PASSWORD}
      POSTGRES_DB: 'keycloak'
      KC_BOOTSTRAP_ADMIN_USERNAME: ${KEYCLOAK_USERNAME}
      KC_BOOTSTRAP_ADMIN_PASSWORD: ${KEYCLOAK_PASSWORD}
      KC_LOG_LEVEL: DEBUG
    command: >
      start
      --proxy-headers=forwarded
      --import-realm
      --hostname=https://${URL_KEYCLOAK}
      --http-enabled=true
    ports:
      - "15280:8080"
      - "15443:8443"
    volumes:
      - keycloak_data:/opt/keycloak/data
      - ./outline-realm.json:/opt/keycloak/data/import/realm-config.json
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:15280/realms/outline"]
      interval: 30s
      timeout: 20s
      retries: 5
      start_period: 30s
    restart: always
    networks:
      - keycloak-network

volumes:
  database-data:
  keycloak_data:

networks:
  keycloak-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.31.0.0/24
