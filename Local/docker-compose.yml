
services:
  # Portainer
  # portainer:
  #   image: portainer/portainer-ce:latest
  #   container_name: portainer
  #   ports:
  #     - 15200:9000
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     - portainer_data:/data
  #   restart: always

  # comente isso quando estiver usando 'localhost'
  #  command: --admin-password '$2y$05$sQiyYKgsFju/4izybziH3OvhtEG2XBhRT8ysBpURzgl.9KpHVQO8q'
 
  # GITLAB
  gitlab:
    image: gitlab/gitlab-ce:17.3.1-ce.0
    container_name: gitlab
    hostname: 'localhost'
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        external_url 'http://localhost'
        gitlab_rails['initial_root_password'] = 'asd123456!'
    #     nginx['listen_https'] = false
    #     nginx['redirect_http_to_https'] = false
    #     nginx['listen_port'] = 8181
    #     # Gitlab root password
    #     gitlab_rails['initial_root_password']='R0laBill#'
    #     # LDAP configuration
    #     gitlab_rails['ldap_enabled'] = true
    #     gitlab_rails['ldap_label'] = 'LDAP'
    #     gitlab_rails['ldap_host'] = '192.168.69.200'
    #     gitlab_rails['ldap_port'] = 389
    #     gitlab_rails['ldap_uid'] = 'uid'
    #     gitlab_rails['ldap_method'] = 'plain' # 'ssl' or 'plain'
    #     gitlab_rails['ldap_bind_dn'] = 'cn=reader,dc=mystartup,dc=ucoip,dc=pt'
    #     gitlab_rails['ldap_password'] = 'a3fe4a032f7d7a7edd1032518c2c6f89'
    #     gitlab_rails['ldap_allow_username_or_email_login'] = true
    #     gitlab_rails['ldap_base'] = 'dc=mystartup,dc=ucoip,dc=pt'
    ports:
      - '15210:80'
      - '15211:443'
      - '15212:22'
    volumes:
      - gitlab-install:/etc/gitlab
      - gitlab-logs:/var/log/gitlab
      - gitlab-data:/var/opt/gitlab
    shm_size: '256m'
    restart: always
    networks:
      - ipbrick-network
# Apos instalação usar o seguinte comenado para alterar a senha: docker exec -it gitlab cat /etc/gitlab/initial_root_password



  # GRAFANA
  grafana:
    image: grafana/grafana:11.1.4
    container_name: grafana
    # hostname: 'grafana.mystartup.ucoip.pt'
    ports:
      - 15220:3000
    environment:
      - GF_DATABASE_TYPE=postgres
      - GF_DATABASE_HOST=postgres:5432
      - GF_DATABASE_NAME=grafana_db
      - GF_DATABASE_USER=${POSTGRESQL_USERNAME}
      - GF_DATABASE_PASSWORD=${POSTGRESQL_PASSWORD}
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      #- GF_SERVER_ROOT_URL=%(protocol)s://%(domain)s/grafana
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - grafana_storage:/var/lib/grafana
    restart: always
    networks:
      - ipbrick-network

  # OUTLINE
  outline:
    image: docker.getoutline.com/outlinewiki/outline:0.81.1
    container_name: outline_server
    environment:
      NODE_ENV: production
      UTILS_SECRET: ${OUTLINE_UTILS_SECRET}
      SECRET_KEY: ${OUTLINE_SECRET_KEY}
      DATABASE_URL: postgres://${POSTGRESQL_USERNAME}:${POSTGRESQL_PASSWORD}@postgres:5432/outline
      DATABASE_CONNECTION_POOL_MIN:
      DATABASE_CONNECTION_POOL_MAX:
      PGSSLMODE: disable
      REDIS_URL: redis://redis:6379
      URL: https://${URL_OUTLINE}
      PORT: 3000
      # Keycloak OAuth
      OIDC_CLIENT_ID: outline
      OIDC_CLIENT_SECRET: PkIjqEKDZIJNtBFfln21SH9cHKyTYl80
      OIDC_AUTH_URI: http://${URL_KEYCLOAK}:15280/realms/outline/protocol/openid-connect/auth
      OIDC_TOKEN_URI: http://${URL_KEYCLOAK}:15280/realms/outline/protocol/openid-connect/token
      OIDC_USERINFO_URI: http://${URL_KEYCLOAK}:15280/realms/outline/protocol/openid-connect/userinfo
      OIDC_LOGOUT_URL: http://${URL_KEYCLOAK}:15280/realms/outline/protocol/openid-connect/logout
      OIDC_REDIRECT_URI: https://${URL_OUTLINE}/auth/oidc.callback
      FORCE_HTTPS: false
      WEB_CONCURRENCY: 1
      DEBUG: http
      LOG_LEVEL: info
      DEFAULT_LANGUAGE: en_US
      RATE_LIMITER_ENABLED: true
      RATE_LIMITER_REQUESTS: 1000
      RATE_LIMITER_DURATION_WINDOW: 60
      DEVELOPMENT_UNSAFE_INLINE_CSP: false
      # Local File Storage
      FILE_STORAGE: local
      FILE_STORAGE_UPLOAD_MAX_SIZE: 52428800 #50MB
      FILE_STORAGE_IMPORT_MAX_SIZE: 5120000
    ports:
      - "15230:3000"
    depends_on:
      - postgres
      - redis
      - keycloak
    restart: always
    networks:
      - ipbrick-network

  redis:
    image: redis:7.4
    container_name: outline_redis
    ports:
      - "6379:6379"
    volumes:
      - ./redis.conf:/redis.conf
    command: ["redis-server", "/redis.conf"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 30s
      retries: 3
    restart: always
    networks:
      - ipbrick-network
  
  # POSTGRES
  postgres:
    image: postgres:12.22
    container_name: ipbrick_postgres
    ports:
      - "5432:5432"
    volumes:
      - database-data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "outline", "-U", "user"]
      interval: 30s
      timeout: 20s
      retries: 3
    environment:
      POSTGRES_USER: ${POSTGRESQL_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRESQL_PASSWORD}
      POSTGRES_DB: 'outline'
    restart: always
    networks:
      - ipbrick-network

# KEYCLOAK
  keycloak:
    image: keycloak/keycloak:26.0
    container_name: keycloak_server
    environment:
      PROXY_ADDRESS_FORWARDING: true
      POSTGRES_USER: ${POSTGRESQL_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRESQL_PASSWORD}
      POSTGRES_DB: 'keycloak'
      KC_BOOTSTRAP_ADMIN_USERNAME: ${KEYCLOAK_USERNAME}
      KC_BOOTSTRAP_ADMIN_PASSWORD: ${KEYCLOAK_PASSWORD}
      KC_LOG_LEVEL: DEBUG
    command: >
      start --import-realm
      --proxy-headers=xforwarded
      --hostname=https://${URL_KEYCLOAK}
      --http-enabled=true
    ports:
      - "15240:8080"
      - "15443:8443"
    volumes:
      - keycloak_data:/opt/keycloak/data
      - ./keycloak/imports:/opt/keycloak/data/import
    depends_on:
      - postgres
    restart: always
    networks:
      - ipbrick-network

  # WEKAN
  wekandb:
    image: mongo:6
    container_name: wekan-db
    restart: always
    command: mongod --logpath /dev/null --oplogSize 128 --quiet
    expose:
      - 27017
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - wekan-db:/data/db
      - wekan-db-dump:/dump
    networks:
      - wekan-tier

  wekan:
    image: wekanteam/wekan:v7.59
    container_name: wekan-app
    restart: always
    ports:
      - 15250:8080
    environment:
      - WRITABLE_PATH=/data
      - MONGO_URL=mongodb://wekandb:27017/wekan
      - ROOT_URL=http://localhost
      #- ROOT_URL=${URL_WEKAN}
      - MAIL_URL=smtp://192.168.69.200:25/?ignoreTLS=true&tls={rejectUnauthorized:false}
      - MAIL_FROM=Wekan Notifications <noreply.wekan@mystartup.ucoip.pt>
      - WITH_API=true
      - RICHER_CARD_COMMENT_EDITOR=false
      - CARD_OPENED_WEBHOOK_ENABLED=false
      - BIGEVENTS_PATTERN=NONE
      - BROWSER_POLICY_ENABLED=true
      - DEFAULT_AUTHENTICATION_METHOD=ldap
      - LDAP_ENABLE=true
      - LDAP_PORT=389
      - LDAP_HOST=192.168.69.200
      - LDAP_USER_AUTHENTICATION=true
      - LDAP_USER_AUTHENTICATION_FIELD=uid
      - LDAP_BASEDN=ou=Users,dc=mystartup,dc=ucoip,dc=pt
      - LDAP_RECONNECT=true
      - LDAP_AUTHENTIFICATION=true
      - LDAP_AUTHENTIFICATION_USERDN=cn=reader,dc=mystartup,dc=ucoip,dc=pt
      - LDAP_AUTHENTIFICATION_PASSWORD=a3fe4a032f7d7a7edd1032518c2c6f89
      - LDAP_LOG_ENABLED=true
      - LDAP_ENCRYPTION=false
      - LDAP_USER_SEARCH_FILTER=(&(objectClass=inetOrgPerson))
      - LDAP_USER_SEARCH_SCOPE=one
      - LDAP_USER_SEARCH_FIELD=uid
      - LDAP_USERNAME_FIELD=uid
      - LDAP_FULLNAME_FIELD=cn
      - LDAP_EMAIL_FIELD=mail
    depends_on:
      - wekandb
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - wekan-files:/data:rw
    networks:
      - wekan-tier

volumes:
  database-data:
  keycloak_data:
  grafana_storage: {}
  gitlab-install: {}
  gitlab-logs: {}
  gitlab-data: {}
  wekan-files:
    driver: local
  wekan-db:
    driver: local
  wekan-db-dump:
    driver: local

networks:
  ipbrick-network:
    driver: bridge
  wekan-tier:
    driver: bridge
    # ipam:
    #   config:
    #     - subnet: 172.31.0.0/24
